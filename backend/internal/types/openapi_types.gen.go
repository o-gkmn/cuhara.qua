// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package types

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
	TenantAuthScopes = "TenantAuth.Scopes"
)

// ClaimResponse defines model for claimResponse.
type ClaimResponse struct {
	Description *string `json:"description,omitempty"`
	Id          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// CreateClaimRequest defines model for createClaimRequest.
type CreateClaimRequest struct {
	Description string `json:"description"`
	Name        string `json:"name"`
}

// CreateClaimResponse defines model for createClaimResponse.
type CreateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateRoleRequest defines model for createRoleRequest.
type CreateRoleRequest struct {
	Name string `json:"name"`
}

// CreateRoleResponse defines model for createRoleResponse.
type CreateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateSubTopicRequest defines model for createSubTopicRequest.
type CreateSubTopicRequest struct {
	Name string `json:"name"`
}

// CreateSubTopicResponse defines model for createSubTopicResponse.
type CreateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTenantRequest defines model for createTenantRequest.
type CreateTenantRequest struct {
	Name string `json:"name"`
}

// CreateTenantResponse defines model for createTenantResponse.
type CreateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTopicRequest defines model for createTopicRequest.
type CreateTopicRequest struct {
	Name string `json:"name"`
}

// CreateTopicResponse defines model for createTopicResponse.
type CreateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteClaimResponse defines model for deleteClaimResponse.
type DeleteClaimResponse struct {
	Id *int64 `json:"id,omitempty" validate:"gte=0"`
}

// DeleteRoleResponse defines model for deleteRoleResponse.
type DeleteRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteSubTopicResponse defines model for deleteSubTopicResponse.
type DeleteSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTenantResponse defines model for deleteTenantResponse.
type DeleteTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTopicResponse defines model for deleteTopicResponse.
type DeleteTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteUserRequest defines model for deleteUserRequest.
type DeleteUserRequest = int64

// DeleteUserResponse defines model for deleteUserResponse.
type DeleteUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// HttpValidationErrorDetail defines model for httpValidationErrorDetail.
type HttpValidationErrorDetail struct {
	// Error Error describing field validation failure
	Error string `json:"error"`

	// In Indicates how the invalid field was provided
	In string `json:"in"`

	// Key Key of field failing validation
	Key string `json:"key"`
}

// LoginRequest defines model for loginRequest.
type LoginRequest struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// LoginResponse defines model for loginResponse.
type LoginResponse struct {
	Token *string `json:"token,omitempty"`
}

// PublicHttpError defines model for publicHttpError.
type PublicHttpError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`
}

// PublicHttpValidationError defines model for publicHttpValidationError.
type PublicHttpValidationError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`

	// ValidationErrors List of errors received while validating payload against schema
	ValidationErrors []HttpValidationErrorDetail `json:"validationErrors"`
}

// RegisterRequest defines model for registerRequest.
type RegisterRequest struct {
	Email    string `json:"email"`
	Name     string `json:"name"`
	Password string `json:"password"`
	Role     struct {
		Id *int64 `json:"id,omitempty"`
	} `json:"role"`
	VscAccount string `json:"vscAccount"`
}

// RegisterResponse defines model for registerResponse.
type RegisterResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// RoleResponse defines model for roleResponse.
type RoleResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// SubTopicResponse defines model for subTopicResponse.
type SubTopicResponse struct {
	Id    *int64         `json:"id,omitempty"`
	Name  *string        `json:"name,omitempty"`
	Topic *TopicResponse `json:"topic,omitempty"`
}

// TenantResponse defines model for tenantResponse.
type TenantResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// TopicResponse defines model for topicResponse.
type TopicResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// UpdateClaimRequest defines model for updateClaimRequest.
type UpdateClaimRequest struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// UpdateClaimResponse defines model for updateClaimResponse.
type UpdateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateRoleRequest defines model for updateRoleRequest.
type UpdateRoleRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateRoleResponse defines model for updateRoleResponse.
type UpdateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateSubTopicRequest defines model for updateSubTopicRequest.
type UpdateSubTopicRequest struct {
	Name  *string `json:"name,omitempty"`
	Topic *struct {
		Id *int64 `json:"id,omitempty"`
	} `json:"topic,omitempty"`
}

// UpdateSubTopicResponse defines model for updateSubTopicResponse.
type UpdateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTenantRequest defines model for updateTenantRequest.
type UpdateTenantRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTenantResponse defines model for updateTenantResponse.
type UpdateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTopicRequest defines model for updateTopicRequest.
type UpdateTopicRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTopicResponse defines model for updateTopicResponse.
type UpdateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateUserRequest defines model for updateUserRequest.
type UpdateUserRequest struct {
	Email *openapi_types.Email `json:"email,omitempty"`
	Name  *string              `json:"name,omitempty"`
	Role  *struct {
		Id int64 `json:"id"`
	} `json:"role,omitempty"`
	VscAccount *string `json:"vscAccount,omitempty"`
}

// UpdateUserResponse defines model for updateUserResponse.
type UpdateUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UserResponse defines model for userResponse.
type UserResponse struct {
	Email      *string       `json:"email,omitempty"`
	Id         *int64        `json:"id,omitempty"`
	Name       *string       `json:"name,omitempty"`
	Role       *RoleResponse `json:"role,omitempty"`
	VscAccount *string       `json:"vscAccount,omitempty"`
}

// IDPathParam defines model for IDPathParam.
type IDPathParam = int64

// SubIDPathParam defines model for SubIDPathParam.
type SubIDPathParam = int64

// PostApiV1AuthLoginJSONRequestBody defines body for PostApiV1AuthLogin for application/json ContentType.
type PostApiV1AuthLoginJSONRequestBody = LoginRequest

// PostApiV1AuthRegisterJSONRequestBody defines body for PostApiV1AuthRegister for application/json ContentType.
type PostApiV1AuthRegisterJSONRequestBody = RegisterRequest

// PostApiV1ClaimsJSONRequestBody defines body for PostApiV1Claims for application/json ContentType.
type PostApiV1ClaimsJSONRequestBody = CreateClaimRequest

// PatchApiV1ClaimsIdJSONRequestBody defines body for PatchApiV1ClaimsId for application/json ContentType.
type PatchApiV1ClaimsIdJSONRequestBody = UpdateClaimRequest

// PostApiV1RolesJSONRequestBody defines body for PostApiV1Roles for application/json ContentType.
type PostApiV1RolesJSONRequestBody = CreateRoleRequest

// PatchApiV1RolesIdJSONRequestBody defines body for PatchApiV1RolesId for application/json ContentType.
type PatchApiV1RolesIdJSONRequestBody = UpdateRoleRequest

// PostApiV1TenantsJSONRequestBody defines body for PostApiV1Tenants for application/json ContentType.
type PostApiV1TenantsJSONRequestBody = CreateTenantRequest

// PatchApiV1TenantsIdJSONRequestBody defines body for PatchApiV1TenantsId for application/json ContentType.
type PatchApiV1TenantsIdJSONRequestBody = UpdateTenantRequest

// PostApiV1TopicsJSONRequestBody defines body for PostApiV1Topics for application/json ContentType.
type PostApiV1TopicsJSONRequestBody = CreateTopicRequest

// PatchApiV1TopicsIdJSONRequestBody defines body for PatchApiV1TopicsId for application/json ContentType.
type PatchApiV1TopicsIdJSONRequestBody = UpdateTopicRequest

// PostApiV1TopicsIdSubTopicsJSONRequestBody defines body for PostApiV1TopicsIdSubTopics for application/json ContentType.
type PostApiV1TopicsIdSubTopicsJSONRequestBody = CreateSubTopicRequest

// PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody defines body for PatchApiV1TopicsIdSubTopicsSubId for application/json ContentType.
type PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody = UpdateSubTopicRequest

// PatchApiV1UsersIdJSONRequestBody defines body for PatchApiV1UsersId for application/json ContentType.
type PatchApiV1UsersIdJSONRequestBody = UpdateUserRequest

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
	"AAD//0jBlO4vSQAA",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
