// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package types

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// ClaimResponse defines model for claimResponse.
type ClaimResponse struct {
	Description *string `json:"description,omitempty"`
	Id          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// CreateClaimRequest defines model for createClaimRequest.
type CreateClaimRequest struct {
	Description string `json:"description"`
	Name        string `json:"name"`
}

// CreateClaimResponse defines model for createClaimResponse.
type CreateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateRoleRequest defines model for createRoleRequest.
type CreateRoleRequest struct {
	Name   string `json:"name"`
	Tenant struct {
		Id int64 `json:"id"`
	} `json:"tenant"`
}

// CreateRoleResponse defines model for createRoleResponse.
type CreateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateSubTopicRequest defines model for createSubTopicRequest.
type CreateSubTopicRequest struct {
	Name  string `json:"name"`
	Topic struct {
		Id int64 `json:"id"`
	} `json:"topic"`
}

// CreateSubTopicResponse defines model for createSubTopicResponse.
type CreateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTenantRequest defines model for createTenantRequest.
type CreateTenantRequest struct {
	Name string `json:"name"`
}

// CreateTenantResponse defines model for createTenantResponse.
type CreateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTopicRequest defines model for createTopicRequest.
type CreateTopicRequest struct {
	Name string `json:"name"`
}

// CreateTopicResponse defines model for createTopicResponse.
type CreateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteClaimResponse defines model for deleteClaimResponse.
type DeleteClaimResponse struct {
	Id *int64 `json:"id,omitempty" validate:"gte=0"`
}

// DeleteRoleResponse defines model for deleteRoleResponse.
type DeleteRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteSubTopicResponse defines model for deleteSubTopicResponse.
type DeleteSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTenantResponse defines model for deleteTenantResponse.
type DeleteTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTopicResponse defines model for deleteTopicResponse.
type DeleteTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteUserRequest defines model for deleteUserRequest.
type DeleteUserRequest = int64

// DeleteUserResponse defines model for deleteUserResponse.
type DeleteUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// HttpValidationErrorDetail defines model for httpValidationErrorDetail.
type HttpValidationErrorDetail struct {
	// Error Error describing field validation failure
	Error string `json:"error"`

	// In Indicates how the invalid field was provided
	In string `json:"in"`

	// Key Key of field failing validation
	Key string `json:"key"`
}

// LoginRequest defines model for loginRequest.
type LoginRequest struct {
	Email    string `json:"email"`
	Password string `json:"password"`
}

// LoginResponse defines model for loginResponse.
type LoginResponse struct {
	Token *string `json:"token,omitempty"`
}

// PublicHttpError defines model for publicHttpError.
type PublicHttpError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`
}

// PublicHttpValidationError defines model for publicHttpValidationError.
type PublicHttpValidationError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`

	// ValidationErrors List of errors received while validating payload against schema
	ValidationErrors []HttpValidationErrorDetail `json:"validationErrors"`
}

// RegisterRequest defines model for registerRequest.
type RegisterRequest struct {
	Email      string `json:"email"`
	Name       string `json:"name"`
	Password   string `json:"password"`
	RoleID     int64  `json:"roleID"`
	TenantID   int64  `json:"tenantID"`
	VscAccount string `json:"vscAccount"`
}

// RegisterResponse defines model for registerResponse.
type RegisterResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// RoleResponse defines model for roleResponse.
type RoleResponse struct {
	Id     *int64          `json:"id,omitempty"`
	Name   *string         `json:"name,omitempty"`
	Tenant *TenantResponse `json:"tenant,omitempty"`
}

// SubTopicResponse defines model for subTopicResponse.
type SubTopicResponse struct {
	Id    *int64         `json:"id,omitempty"`
	Name  *string        `json:"name,omitempty"`
	Topic *TopicResponse `json:"topic,omitempty"`
}

// TenantResponse defines model for tenantResponse.
type TenantResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// TopicResponse defines model for topicResponse.
type TopicResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// UpdateClaimRequest defines model for updateClaimRequest.
type UpdateClaimRequest struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// UpdateClaimResponse defines model for updateClaimResponse.
type UpdateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateRoleRequest defines model for updateRoleRequest.
type UpdateRoleRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateRoleResponse defines model for updateRoleResponse.
type UpdateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateSubTopicRequest defines model for updateSubTopicRequest.
type UpdateSubTopicRequest struct {
	Name  *string `json:"name,omitempty"`
	Topic *struct {
		Id *int64 `json:"id,omitempty"`
	} `json:"topic,omitempty"`
}

// UpdateSubTopicResponse defines model for updateSubTopicResponse.
type UpdateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTenantRequest defines model for updateTenantRequest.
type UpdateTenantRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTenantResponse defines model for updateTenantResponse.
type UpdateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTopicRequest defines model for updateTopicRequest.
type UpdateTopicRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTopicResponse defines model for updateTopicResponse.
type UpdateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateUserRequest defines model for updateUserRequest.
type UpdateUserRequest struct {
	Email *string `json:"email,omitempty"`
	Id    int64   `json:"id"`
	Name  *string `json:"name,omitempty"`
	Role  *struct {
		Id int64 `json:"id"`
	} `json:"role,omitempty"`
	VscAccount *string `json:"vscAccount,omitempty"`
}

// UpdateUserResponse defines model for updateUserResponse.
type UpdateUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UserResponse defines model for userResponse.
type UserResponse struct {
	Email      *string `json:"email,omitempty"`
	Id         *int64  `json:"id,omitempty"`
	Name       *string `json:"name,omitempty"`
	VscAccount *string `json:"vscAccount,omitempty"`
}

// IDPathParam defines model for IDPathParam.
type IDPathParam = int64

// SubIDPathParam defines model for SubIDPathParam.
type SubIDPathParam = int64

// PostApiV1AuthLoginJSONRequestBody defines body for PostApiV1AuthLogin for application/json ContentType.
type PostApiV1AuthLoginJSONRequestBody = LoginRequest

// PostApiV1AuthRegisterJSONRequestBody defines body for PostApiV1AuthRegister for application/json ContentType.
type PostApiV1AuthRegisterJSONRequestBody = RegisterRequest

// PostApiV1ClaimsJSONRequestBody defines body for PostApiV1Claims for application/json ContentType.
type PostApiV1ClaimsJSONRequestBody = CreateClaimRequest

// PatchApiV1ClaimsIdJSONRequestBody defines body for PatchApiV1ClaimsId for application/json ContentType.
type PatchApiV1ClaimsIdJSONRequestBody = UpdateClaimRequest

// PostApiV1RolesJSONRequestBody defines body for PostApiV1Roles for application/json ContentType.
type PostApiV1RolesJSONRequestBody = CreateRoleRequest

// PatchApiV1RolesIdJSONRequestBody defines body for PatchApiV1RolesId for application/json ContentType.
type PatchApiV1RolesIdJSONRequestBody = UpdateRoleRequest

// PostApiV1TenantsJSONRequestBody defines body for PostApiV1Tenants for application/json ContentType.
type PostApiV1TenantsJSONRequestBody = CreateTenantRequest

// PatchApiV1TenantsIdJSONRequestBody defines body for PatchApiV1TenantsId for application/json ContentType.
type PatchApiV1TenantsIdJSONRequestBody = UpdateTenantRequest

// PostApiV1TopicsJSONRequestBody defines body for PostApiV1Topics for application/json ContentType.
type PostApiV1TopicsJSONRequestBody = CreateTopicRequest

// PatchApiV1TopicsIdJSONRequestBody defines body for PatchApiV1TopicsId for application/json ContentType.
type PatchApiV1TopicsIdJSONRequestBody = UpdateTopicRequest

// PostApiV1TopicsIdSubTopicsJSONRequestBody defines body for PostApiV1TopicsIdSubTopics for application/json ContentType.
type PostApiV1TopicsIdSubTopicsJSONRequestBody = CreateSubTopicRequest

// PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody defines body for PatchApiV1TopicsIdSubTopicsSubId for application/json ContentType.
type PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody = UpdateSubTopicRequest

// PutApiV1UsersJSONRequestBody defines body for PutApiV1Users for application/json ContentType.
type PutApiV1UsersJSONRequestBody = UpdateUserRequest

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
