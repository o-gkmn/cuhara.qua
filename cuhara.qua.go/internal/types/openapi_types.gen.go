// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package types

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
	TenantAuthScopes = "TenantAuth.Scopes"
)

// ClaimResponse defines model for claimResponse.
type ClaimResponse struct {
	Description *string `json:"description,omitempty"`
	Id          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// CreateClaimRequest defines model for createClaimRequest.
type CreateClaimRequest struct {
	Description string `json:"description"`
	Name        string `json:"name"`
}

// CreateClaimResponse defines model for createClaimResponse.
type CreateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateRoleRequest defines model for createRoleRequest.
type CreateRoleRequest struct {
	Name string `json:"name"`
}

// CreateRoleResponse defines model for createRoleResponse.
type CreateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateSubTopicRequest defines model for createSubTopicRequest.
type CreateSubTopicRequest struct {
	Name string `json:"name"`
}

// CreateSubTopicResponse defines model for createSubTopicResponse.
type CreateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTenantRequest defines model for createTenantRequest.
type CreateTenantRequest struct {
	Name string `json:"name"`
}

// CreateTenantResponse defines model for createTenantResponse.
type CreateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTopicRequest defines model for createTopicRequest.
type CreateTopicRequest struct {
	Name string `json:"name"`
}

// CreateTopicResponse defines model for createTopicResponse.
type CreateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteClaimResponse defines model for deleteClaimResponse.
type DeleteClaimResponse struct {
	Id *int64 `json:"id,omitempty" validate:"gte=0"`
}

// DeleteRoleResponse defines model for deleteRoleResponse.
type DeleteRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteSubTopicResponse defines model for deleteSubTopicResponse.
type DeleteSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTenantResponse defines model for deleteTenantResponse.
type DeleteTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTopicResponse defines model for deleteTopicResponse.
type DeleteTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteUserRequest defines model for deleteUserRequest.
type DeleteUserRequest = int64

// DeleteUserResponse defines model for deleteUserResponse.
type DeleteUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// HttpValidationErrorDetail defines model for httpValidationErrorDetail.
type HttpValidationErrorDetail struct {
	// Error Error describing field validation failure
	Error string `json:"error"`

	// In Indicates how the invalid field was provided
	In string `json:"in"`

	// Key Key of field failing validation
	Key string `json:"key"`
}

// LoginRequest defines model for loginRequest.
type LoginRequest struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// LoginResponse defines model for loginResponse.
type LoginResponse struct {
	Token *string `json:"token,omitempty"`
}

// PublicHttpError defines model for publicHttpError.
type PublicHttpError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`
}

// PublicHttpValidationError defines model for publicHttpValidationError.
type PublicHttpValidationError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`

	// ValidationErrors List of errors received while validating payload against schema
	ValidationErrors []HttpValidationErrorDetail `json:"validationErrors"`
}

// RegisterRequest defines model for registerRequest.
type RegisterRequest struct {
	Email    string `json:"email"`
	Name     string `json:"name"`
	Password string `json:"password"`
	Role     struct {
		Id *int64 `json:"id,omitempty"`
	} `json:"role"`
	VscAccount string `json:"vscAccount"`
}

// RegisterResponse defines model for registerResponse.
type RegisterResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// RoleResponse defines model for roleResponse.
type RoleResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// SubTopicResponse defines model for subTopicResponse.
type SubTopicResponse struct {
	Id    *int64         `json:"id,omitempty"`
	Name  *string        `json:"name,omitempty"`
	Topic *TopicResponse `json:"topic,omitempty"`
}

// TenantResponse defines model for tenantResponse.
type TenantResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// TopicResponse defines model for topicResponse.
type TopicResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// UpdateClaimRequest defines model for updateClaimRequest.
type UpdateClaimRequest struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// UpdateClaimResponse defines model for updateClaimResponse.
type UpdateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateRoleRequest defines model for updateRoleRequest.
type UpdateRoleRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateRoleResponse defines model for updateRoleResponse.
type UpdateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateSubTopicRequest defines model for updateSubTopicRequest.
type UpdateSubTopicRequest struct {
	Name  *string `json:"name,omitempty"`
	Topic *struct {
		Id *int64 `json:"id,omitempty"`
	} `json:"topic,omitempty"`
}

// UpdateSubTopicResponse defines model for updateSubTopicResponse.
type UpdateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTenantRequest defines model for updateTenantRequest.
type UpdateTenantRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTenantResponse defines model for updateTenantResponse.
type UpdateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTopicRequest defines model for updateTopicRequest.
type UpdateTopicRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTopicResponse defines model for updateTopicResponse.
type UpdateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateUserRequest defines model for updateUserRequest.
type UpdateUserRequest struct {
	Email *openapi_types.Email `json:"email,omitempty"`
	Name  *string              `json:"name,omitempty"`
	Role  *struct {
		Id int64 `json:"id"`
	} `json:"role,omitempty"`
	VscAccount *string `json:"vscAccount,omitempty"`
}

// UpdateUserResponse defines model for updateUserResponse.
type UpdateUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UserResponse defines model for userResponse.
type UserResponse struct {
	Email      *string       `json:"email,omitempty"`
	Id         *int64        `json:"id,omitempty"`
	Name       *string       `json:"name,omitempty"`
	Role       *RoleResponse `json:"role,omitempty"`
	VscAccount *string       `json:"vscAccount,omitempty"`
}

// IDPathParam defines model for IDPathParam.
type IDPathParam = int64

// SubIDPathParam defines model for SubIDPathParam.
type SubIDPathParam = int64

// PostApiV1AuthLoginJSONRequestBody defines body for PostApiV1AuthLogin for application/json ContentType.
type PostApiV1AuthLoginJSONRequestBody = LoginRequest

// PostApiV1AuthRegisterJSONRequestBody defines body for PostApiV1AuthRegister for application/json ContentType.
type PostApiV1AuthRegisterJSONRequestBody = RegisterRequest

// PostApiV1ClaimsJSONRequestBody defines body for PostApiV1Claims for application/json ContentType.
type PostApiV1ClaimsJSONRequestBody = CreateClaimRequest

// PatchApiV1ClaimsIdJSONRequestBody defines body for PatchApiV1ClaimsId for application/json ContentType.
type PatchApiV1ClaimsIdJSONRequestBody = UpdateClaimRequest

// PostApiV1RolesJSONRequestBody defines body for PostApiV1Roles for application/json ContentType.
type PostApiV1RolesJSONRequestBody = CreateRoleRequest

// PatchApiV1RolesIdJSONRequestBody defines body for PatchApiV1RolesId for application/json ContentType.
type PatchApiV1RolesIdJSONRequestBody = UpdateRoleRequest

// PostApiV1TenantsJSONRequestBody defines body for PostApiV1Tenants for application/json ContentType.
type PostApiV1TenantsJSONRequestBody = CreateTenantRequest

// PatchApiV1TenantsIdJSONRequestBody defines body for PatchApiV1TenantsId for application/json ContentType.
type PatchApiV1TenantsIdJSONRequestBody = UpdateTenantRequest

// PostApiV1TopicsJSONRequestBody defines body for PostApiV1Topics for application/json ContentType.
type PostApiV1TopicsJSONRequestBody = CreateTopicRequest

// PatchApiV1TopicsIdJSONRequestBody defines body for PatchApiV1TopicsId for application/json ContentType.
type PatchApiV1TopicsIdJSONRequestBody = UpdateTopicRequest

// PostApiV1TopicsIdSubTopicsJSONRequestBody defines body for PostApiV1TopicsIdSubTopics for application/json ContentType.
type PostApiV1TopicsIdSubTopicsJSONRequestBody = CreateSubTopicRequest

// PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody defines body for PatchApiV1TopicsIdSubTopicsSubId for application/json ContentType.
type PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody = UpdateSubTopicRequest

// PatchApiV1UsersIdJSONRequestBody defines body for PatchApiV1UsersId for application/json ContentType.
type PatchApiV1UsersIdJSONRequestBody = UpdateUserRequest

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"H4sIAAAAAAAC/+Rc33LjtvV+FQx+v0vK0iZpZ6KZXmx2t4mbbrJja9POOLqAyCMJWZJgANC21qNX6W1u",
	"m2fI9r06AEiKfwAKkkVrx70UCR4cfN/B+c4BaT/gkCUZSyGVAk8fcEY4SUAC178uX78jcv1OXVM/IxAh",
	"p5mkLMVT/F4AR5evcYCp+pkRucYBTkkCeIpphAPM4deccojwVPIcAizCNSREWVoynhCpxqXyz1/hAMtN",
	"BuYnrIDj7TbA1/mid/7rfIEky2jodELki8vH+rEth2tAwpjQ5ApExlIBGi/OMuCSgug4+FAaE5LTdIW3",
	"gULFZ9JyAR0L22osW/wCoVRDQw5Ewivj2K85CHmgXwG+HwHnjI8SEIKszCM7zPDLP3779PuHmCQEfWQ8",
	"T+M8yg1Fdjf3Gvz0b0GTpq1tnaWbhsPFNPN9a3eR4gm6G9srFoMT2sEg2LNo49Rga77OFzO1tz67de8c",
	"G2ztM0hJKj+7lZduDbfuz5Lw4diOIIYTZQ8FAyMZHYUsghWkI7iXnIwkWWkjtySmEZHqiZWEv0wMCA6H",
	"BtvZxvygG8hMMWCkFhMMvABV2tQ2godg158bwK21lNlPJogoS9+oDfcaJKFxdxa9G7vVkn4GmWsLmq7Q",
	"kkIcodvKKFoSGuccdh7V6pa0a/AyjWhIJAi0ZndIrgHRVFsrLN8RgTLObmkEkc3mB9h0jX4PG8SWhQXl",
	"kPJ052PXTiuXmMVrh80MtrwSsxVNnXkOkgLWiihzJfDKfNVDb9RDyPz89DtawR+/ARf0Y6McLUa1qqqM",
	"CHHHeHREtv3Pv+iSQ2+6LVdTzdIDkSuSJfsAqWd9muWLmIbfSZm9KSOzXZyWgdyMhbeMAzI3IQrQOk9I",
	"OuJAIrKIIUBMjyMxgvssJqmJYbbUkViGAdyTJIuhbFaoQDEJP6iYyoAnVAj1jGSIhCEIgeSaCsRBsJyH",
	"1n0gJJF5t6LG381m75C5iZQCIA4y5ylEKgDsHn01+TLo5oKE3NMkT/D0T19/HeCEpubXi8nEKjkrNipa",
	"nVcsAuWhpDIGS6+0Zly2MUS1MW7k/sr4gkYRpDZAzIX2bLNNBsqgNlZhESCxZnkcoQWgXBTYhDGFVI4E",
	"jYq50ZqkUWyCfefEClLgNNy7/wuCShyK4fPesGzlVbUcEsc/LvH05gH/P4clnuL/G+/a5HHRD47bkb0N",
	"2qF92zRtiZy/UyErqFTwhUBvIUJ3axpDlflUwJJNzEiEyIrQVEhU9LABphISbbjPVbd+7LYs4ZxsOoh2",
	"ltAFc64fWVEhG6rpSKudGHL0un15UE3I4tNK7K0IX4Yhy1NpT2y2HKpdrzlauNUwZgu+HVoD1Ar8FPXj",
	"QUcQ4lQlZU8w6JOefWEuG15YfZWnqU0PwkcOC45tyjyLHncq9IjpBohpY/+Ig5i91gZz9sgTlHqon8gj",
	"Hx8Hg+GowxQPe8M5fAxpe80N5m6rVX3aXmbbl7Efq9B1waX2NmWfZvdiNgQlvYbdJdDj5bEEu08dG4XB",
	"4egpoYcw51RurpVFs6hvgHDgL3O57ha3f/vHDKk7jNOPpj9bA4mAo1yoklb1G+ZxU83CBXpjKv4p+hk3",
	"HpyWAx9067n9GZdvfIzF3TufxmO4eHmjbhgDO1RVSaxQMAnFvgBzD12+Lh1XLUuSx5KOTB2BSC7XkEoa",
	"6vku0NtcSNXglCcfiMQsXaE7KtflEvQKTGOobYxEBiFd0hCpYNF2xIVref8czd788PKH2Ui/8yor94x+",
	"DxvT6tN0yboL+TGNN0h3qabJSlgEsWo3JKGpOZ8xjaNpZc1h0Vs9SFWzardrO5OLFxcThRrLICUZxVP8",
	"5cXk4oUuguVaR8SYZHR8+2KsoBnrgwS9FZhJUK32R91WHbiKBbEREhKsjRscLiM8xe+YkC8z+tMLxZF+",
	"oDhDASG/YZE+RQpZKsHEMcmyuKBj/Iswpc3uhV/f/micC7XOTSTPQV8w20cv9IvJ5NRzV5WrPlLsIiVy",
	"fVKxzOPGfsTTm7kqw5OE8E05WJGqz59vsKJCJdD76ny6wG+0YNGmPEMwXCm7DQrLZsXN4lUxAhGUwp1q",
	"7nk/i+UDAxHZbkafmMtOd2ehs4LMzehDIzXdzLdBM9vezLcN0mugHsZ7RXCdev2mW0OzAgvl34JEJI5R",
	"MazN9rdgyH5V3h4M7OYbeQvSxgW0BBmuIarhHZvDjh2Aak3VekoI9QU83waO2H+lX1IVkW8GO0O/hsbp",
	"g97yHcATx73tbbyLEGQG9/JRQFuC2mJkX1TXvLEE9viBRlvDZgzScob5Wl9HxMGpuV1jVX9oUv965uaU",
	"38t0is/5gDza3os6eTSDe3ksoHTwqA/6ZGipvt7rYt1JwTv11JkZOP02thzcPPE2tp3lOOk3g3vpL2g8",
	"chvXvGlsY9XM7JcnM8qlTlfF3eEqgUbHZakClAO+0lSupQRQt3yewlQcSzt0aYfDULJUP7k7iypdeTBx",
	"gCYVeDap8FMkNVM3kv31yEplTY40mc9Ojbz489ciK38eSmTfR5UQnQ37oXTojPvWckjv4t1fhI7atztP",
	"GvvWnN7s16BynEuFZtX9wbBsvfSy4Fg42aNF9ca0rw1Vy94tuUTaXPGVq2K0U7DqkA0lWc0XF2cRrdle",
	"2ooDSrdw+bJWwF8B3+bNT9uMO7Zd4q9vDu5rClew/+w0zptuf51z8umhda5NWKndGXkYSu/OuumtLzjd",
	"UeBWPd9NX1B99KavO4z3TVzPCSyjoYdwmmFO3SxvDyebrc9JukxoF3wbuGo9Fc76Rb+vJurBbkncoTGY",
	"ItbfjJ9HEL0IOaCPK0FtMeKpdnrwthPYB2idldO61GmDz0/p/Hg8QOfsPPqonH1b7UTubAwMpnFn3Ma2",
	"b2Kc9Pu3dUdu45o3rm08Fvli5KlXovyD1H2adRmVH16JZ7OxO9+AWmit/mLXWzIbkB4lm5WFfdJ5VlKG",
	"kuz2R4hnUe3rQ0LjAPGuU3uUgJeOeWz+8YP+Y3I/WXfHnEXaq6i7Lv5a/elCLxjiT+rPUE4cFmD+VUVP",
	"gHlUFj2Zp1Nd/G8EwVAVzZmznONb6t4g9K9tHpHlmo41slwuin/x0VvRmFGuYuZ9cXc4YEX/R1TaAd9S",
	"olxLiaH5Pe+A4t+9Wb9zq2V47d6z693ee5ByQI4tQGyzsj+92r8yrDLr2cAfKsnVP/Q/S4LzIt4/r9mJ",
	"90tpaqrif/P0HDkGnS8o5+oBfluGQs5jPMVjvNXTMk5XNCXxSNyR1Qr4aPfZ8xcXE7z9bwAAAP//6NkJ",
	"yStJAAA=",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
