// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package types

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
)

// ClaimResponse defines model for claimResponse.
type ClaimResponse struct {
	Description *string `json:"description,omitempty"`
	Id          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// CreateClaimRequest defines model for createClaimRequest.
type CreateClaimRequest struct {
	Description string `json:"description"`
	Name        string `json:"name"`
}

// CreateClaimResponse defines model for createClaimResponse.
type CreateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateRoleRequest defines model for createRoleRequest.
type CreateRoleRequest struct {
	Name   string `json:"name"`
	Tenant struct {
		Id int64 `json:"id"`
	} `json:"tenant"`
}

// CreateRoleResponse defines model for createRoleResponse.
type CreateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateSubTopicRequest defines model for createSubTopicRequest.
type CreateSubTopicRequest struct {
	Name  string `json:"name"`
	Topic struct {
		Id int64 `json:"id"`
	} `json:"topic"`
}

// CreateSubTopicResponse defines model for createSubTopicResponse.
type CreateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTenantRequest defines model for createTenantRequest.
type CreateTenantRequest struct {
	Name string `json:"name"`
}

// CreateTenantResponse defines model for createTenantResponse.
type CreateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTopicRequest defines model for createTopicRequest.
type CreateTopicRequest struct {
	Name string `json:"name"`
}

// CreateTopicResponse defines model for createTopicResponse.
type CreateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteClaimResponse defines model for deleteClaimResponse.
type DeleteClaimResponse struct {
	Id *int64 `json:"id,omitempty" validate:"gte=0"`
}

// DeleteRoleResponse defines model for deleteRoleResponse.
type DeleteRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteSubTopicResponse defines model for deleteSubTopicResponse.
type DeleteSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTenantResponse defines model for deleteTenantResponse.
type DeleteTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTopicResponse defines model for deleteTopicResponse.
type DeleteTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteUserRequest defines model for deleteUserRequest.
type DeleteUserRequest = int64

// DeleteUserResponse defines model for deleteUserResponse.
type DeleteUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// HttpValidationErrorDetail defines model for httpValidationErrorDetail.
type HttpValidationErrorDetail struct {
	// Error Error describing field validation failure
	Error string `json:"error"`

	// In Indicates how the invalid field was provided
	In string `json:"in"`

	// Key Key of field failing validation
	Key string `json:"key"`
}

// LoginRequest defines model for loginRequest.
type LoginRequest struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// LoginResponse defines model for loginResponse.
type LoginResponse struct {
	Token *string `json:"token,omitempty"`
}

// PublicHttpError defines model for publicHttpError.
type PublicHttpError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`
}

// PublicHttpValidationError defines model for publicHttpValidationError.
type PublicHttpValidationError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`

	// ValidationErrors List of errors received while validating payload against schema
	ValidationErrors []HttpValidationErrorDetail `json:"validationErrors"`
}

// RegisterRequest defines model for registerRequest.
type RegisterRequest struct {
	Email      string `json:"email"`
	Name       string `json:"name"`
	Password   string `json:"password"`
	RoleID     int64  `json:"roleID"`
	TenantID   int64  `json:"tenantID"`
	VscAccount string `json:"vscAccount"`
}

// RegisterResponse defines model for registerResponse.
type RegisterResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// RoleResponse defines model for roleResponse.
type RoleResponse struct {
	Id     *int64          `json:"id,omitempty"`
	Name   *string         `json:"name,omitempty"`
	Tenant *TenantResponse `json:"tenant,omitempty"`
}

// SubTopicResponse defines model for subTopicResponse.
type SubTopicResponse struct {
	Id    *int64         `json:"id,omitempty"`
	Name  *string        `json:"name,omitempty"`
	Topic *TopicResponse `json:"topic,omitempty"`
}

// TenantResponse defines model for tenantResponse.
type TenantResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// TopicResponse defines model for topicResponse.
type TopicResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// UpdateClaimRequest defines model for updateClaimRequest.
type UpdateClaimRequest struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// UpdateClaimResponse defines model for updateClaimResponse.
type UpdateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateRoleRequest defines model for updateRoleRequest.
type UpdateRoleRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateRoleResponse defines model for updateRoleResponse.
type UpdateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateSubTopicRequest defines model for updateSubTopicRequest.
type UpdateSubTopicRequest struct {
	Name  *string `json:"name,omitempty"`
	Topic *struct {
		Id *int64 `json:"id,omitempty"`
	} `json:"topic,omitempty"`
}

// UpdateSubTopicResponse defines model for updateSubTopicResponse.
type UpdateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTenantRequest defines model for updateTenantRequest.
type UpdateTenantRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTenantResponse defines model for updateTenantResponse.
type UpdateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTopicRequest defines model for updateTopicRequest.
type UpdateTopicRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTopicResponse defines model for updateTopicResponse.
type UpdateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateUserRequest defines model for updateUserRequest.
type UpdateUserRequest struct {
	Email *openapi_types.Email `json:"email,omitempty"`
	Id    int64                `json:"id"`
	Name  *string              `json:"name,omitempty"`
	Role  *struct {
		Id int64 `json:"id"`
	} `json:"role,omitempty"`
	VscAccount *string `json:"vscAccount,omitempty"`
}

// UpdateUserResponse defines model for updateUserResponse.
type UpdateUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UserResponse defines model for userResponse.
type UserResponse struct {
	Email      *string `json:"email,omitempty"`
	Id         *int64  `json:"id,omitempty"`
	Name       *string `json:"name,omitempty"`
	VscAccount *string `json:"vscAccount,omitempty"`
}

// IDPathParam defines model for IDPathParam.
type IDPathParam = int64

// SubIDPathParam defines model for SubIDPathParam.
type SubIDPathParam = int64

// PostApiV1AuthLoginJSONRequestBody defines body for PostApiV1AuthLogin for application/json ContentType.
type PostApiV1AuthLoginJSONRequestBody = LoginRequest

// PostApiV1AuthRegisterJSONRequestBody defines body for PostApiV1AuthRegister for application/json ContentType.
type PostApiV1AuthRegisterJSONRequestBody = RegisterRequest

// PostApiV1ClaimsJSONRequestBody defines body for PostApiV1Claims for application/json ContentType.
type PostApiV1ClaimsJSONRequestBody = CreateClaimRequest

// PatchApiV1ClaimsIdJSONRequestBody defines body for PatchApiV1ClaimsId for application/json ContentType.
type PatchApiV1ClaimsIdJSONRequestBody = UpdateClaimRequest

// PostApiV1RolesJSONRequestBody defines body for PostApiV1Roles for application/json ContentType.
type PostApiV1RolesJSONRequestBody = CreateRoleRequest

// PatchApiV1RolesIdJSONRequestBody defines body for PatchApiV1RolesId for application/json ContentType.
type PatchApiV1RolesIdJSONRequestBody = UpdateRoleRequest

// PostApiV1TenantsJSONRequestBody defines body for PostApiV1Tenants for application/json ContentType.
type PostApiV1TenantsJSONRequestBody = CreateTenantRequest

// PatchApiV1TenantsIdJSONRequestBody defines body for PatchApiV1TenantsId for application/json ContentType.
type PatchApiV1TenantsIdJSONRequestBody = UpdateTenantRequest

// PostApiV1TopicsJSONRequestBody defines body for PostApiV1Topics for application/json ContentType.
type PostApiV1TopicsJSONRequestBody = CreateTopicRequest

// PatchApiV1TopicsIdJSONRequestBody defines body for PatchApiV1TopicsId for application/json ContentType.
type PatchApiV1TopicsIdJSONRequestBody = UpdateTopicRequest

// PostApiV1TopicsIdSubTopicsJSONRequestBody defines body for PostApiV1TopicsIdSubTopics for application/json ContentType.
type PostApiV1TopicsIdSubTopicsJSONRequestBody = CreateSubTopicRequest

// PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody defines body for PatchApiV1TopicsIdSubTopicsSubId for application/json ContentType.
type PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody = UpdateSubTopicRequest

// PutApiV1UsersJSONRequestBody defines body for PutApiV1Users for application/json ContentType.
type PutApiV1UsersJSONRequestBody = UpdateUserRequest

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
