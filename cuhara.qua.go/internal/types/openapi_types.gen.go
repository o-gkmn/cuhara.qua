// Package types provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.5.0 DO NOT EDIT.
package types

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"net/url"
	"path"
	"strings"

	"github.com/getkin/kin-openapi/openapi3"
	openapi_types "github.com/oapi-codegen/runtime/types"
)

const (
	BearerAuthScopes = "BearerAuth.Scopes"
	TenantAuthScopes = "TenantAuth.Scopes"
)

// ClaimResponse defines model for claimResponse.
type ClaimResponse struct {
	Description *string `json:"description,omitempty"`
	Id          *int64  `json:"id,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// CreateClaimRequest defines model for createClaimRequest.
type CreateClaimRequest struct {
	Description string `json:"description"`
	Name        string `json:"name"`
}

// CreateClaimResponse defines model for createClaimResponse.
type CreateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateRoleRequest defines model for createRoleRequest.
type CreateRoleRequest struct {
	Name string `json:"name"`
}

// CreateRoleResponse defines model for createRoleResponse.
type CreateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateSubTopicRequest defines model for createSubTopicRequest.
type CreateSubTopicRequest struct {
	Name string `json:"name"`
}

// CreateSubTopicResponse defines model for createSubTopicResponse.
type CreateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTenantRequest defines model for createTenantRequest.
type CreateTenantRequest struct {
	Name string `json:"name"`
}

// CreateTenantResponse defines model for createTenantResponse.
type CreateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// CreateTopicRequest defines model for createTopicRequest.
type CreateTopicRequest struct {
	Name string `json:"name"`
}

// CreateTopicResponse defines model for createTopicResponse.
type CreateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteClaimResponse defines model for deleteClaimResponse.
type DeleteClaimResponse struct {
	Id *int64 `json:"id,omitempty" validate:"gte=0"`
}

// DeleteRoleResponse defines model for deleteRoleResponse.
type DeleteRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteSubTopicResponse defines model for deleteSubTopicResponse.
type DeleteSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTenantResponse defines model for deleteTenantResponse.
type DeleteTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteTopicResponse defines model for deleteTopicResponse.
type DeleteTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// DeleteUserRequest defines model for deleteUserRequest.
type DeleteUserRequest = int64

// DeleteUserResponse defines model for deleteUserResponse.
type DeleteUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// HttpValidationErrorDetail defines model for httpValidationErrorDetail.
type HttpValidationErrorDetail struct {
	// Error Error describing field validation failure
	Error string `json:"error"`

	// In Indicates how the invalid field was provided
	In string `json:"in"`

	// Key Key of field failing validation
	Key string `json:"key"`
}

// LoginRequest defines model for loginRequest.
type LoginRequest struct {
	Email    openapi_types.Email `json:"email"`
	Password string              `json:"password"`
}

// LoginResponse defines model for loginResponse.
type LoginResponse struct {
	Token *string `json:"token,omitempty"`
}

// PublicHttpError defines model for publicHttpError.
type PublicHttpError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`
}

// PublicHttpValidationError defines model for publicHttpValidationError.
type PublicHttpValidationError struct {
	// Detail More detailed, human-readable, optional explanation of the error
	Detail *string `json:"detail,omitempty"`

	// Code HTTP status code returned for the error
	Code int64 `json:"status"`

	// Title Short, human-readable description of the error
	Title string `json:"title"`

	// Type Type of error returned, should be used for client-side error handling
	Type string `json:"type"`

	// ValidationErrors List of errors received while validating payload against schema
	ValidationErrors []HttpValidationErrorDetail `json:"validationErrors"`
}

// RegisterRequest defines model for registerRequest.
type RegisterRequest struct {
	Email    string `json:"email"`
	Name     string `json:"name"`
	Password string `json:"password"`
	Role     struct {
		Id *int64 `json:"id,omitempty"`
	} `json:"role"`
	VscAccount string `json:"vscAccount"`
}

// RegisterResponse defines model for registerResponse.
type RegisterResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// RoleResponse defines model for roleResponse.
type RoleResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// SubTopicResponse defines model for subTopicResponse.
type SubTopicResponse struct {
	Id    *int64         `json:"id,omitempty"`
	Name  *string        `json:"name,omitempty"`
	Topic *TopicResponse `json:"topic,omitempty"`
}

// TenantResponse defines model for tenantResponse.
type TenantResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// TopicResponse defines model for topicResponse.
type TopicResponse struct {
	Id   *int64  `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
}

// UpdateClaimRequest defines model for updateClaimRequest.
type UpdateClaimRequest struct {
	Description *string `json:"description,omitempty"`
	Name        *string `json:"name,omitempty"`
}

// UpdateClaimResponse defines model for updateClaimResponse.
type UpdateClaimResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateRoleRequest defines model for updateRoleRequest.
type UpdateRoleRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateRoleResponse defines model for updateRoleResponse.
type UpdateRoleResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateSubTopicRequest defines model for updateSubTopicRequest.
type UpdateSubTopicRequest struct {
	Name  *string `json:"name,omitempty"`
	Topic *struct {
		Id *int64 `json:"id,omitempty"`
	} `json:"topic,omitempty"`
}

// UpdateSubTopicResponse defines model for updateSubTopicResponse.
type UpdateSubTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTenantRequest defines model for updateTenantRequest.
type UpdateTenantRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTenantResponse defines model for updateTenantResponse.
type UpdateTenantResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateTopicRequest defines model for updateTopicRequest.
type UpdateTopicRequest struct {
	Name *string `json:"name,omitempty"`
}

// UpdateTopicResponse defines model for updateTopicResponse.
type UpdateTopicResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UpdateUserRequest defines model for updateUserRequest.
type UpdateUserRequest struct {
	Email *openapi_types.Email `json:"email,omitempty"`
	Name  *string              `json:"name,omitempty"`
	Role  *struct {
		Id int64 `json:"id"`
	} `json:"role,omitempty"`
	VscAccount *string `json:"vscAccount,omitempty"`
}

// UpdateUserResponse defines model for updateUserResponse.
type UpdateUserResponse struct {
	Id *int64 `json:"id,omitempty"`
}

// UserResponse defines model for userResponse.
type UserResponse struct {
	Email      *string       `json:"email,omitempty"`
	Id         *int64        `json:"id,omitempty"`
	Name       *string       `json:"name,omitempty"`
	Role       *RoleResponse `json:"role,omitempty"`
	VscAccount *string       `json:"vscAccount,omitempty"`
}

// IDPathParam defines model for IDPathParam.
type IDPathParam = int64

// SubIDPathParam defines model for SubIDPathParam.
type SubIDPathParam = int64

// PostApiV1AuthLoginJSONRequestBody defines body for PostApiV1AuthLogin for application/json ContentType.
type PostApiV1AuthLoginJSONRequestBody = LoginRequest

// PostApiV1AuthRegisterJSONRequestBody defines body for PostApiV1AuthRegister for application/json ContentType.
type PostApiV1AuthRegisterJSONRequestBody = RegisterRequest

// PostApiV1ClaimsJSONRequestBody defines body for PostApiV1Claims for application/json ContentType.
type PostApiV1ClaimsJSONRequestBody = CreateClaimRequest

// PatchApiV1ClaimsIdJSONRequestBody defines body for PatchApiV1ClaimsId for application/json ContentType.
type PatchApiV1ClaimsIdJSONRequestBody = UpdateClaimRequest

// PostApiV1RolesJSONRequestBody defines body for PostApiV1Roles for application/json ContentType.
type PostApiV1RolesJSONRequestBody = CreateRoleRequest

// PatchApiV1RolesIdJSONRequestBody defines body for PatchApiV1RolesId for application/json ContentType.
type PatchApiV1RolesIdJSONRequestBody = UpdateRoleRequest

// PostApiV1TenantsJSONRequestBody defines body for PostApiV1Tenants for application/json ContentType.
type PostApiV1TenantsJSONRequestBody = CreateTenantRequest

// PatchApiV1TenantsIdJSONRequestBody defines body for PatchApiV1TenantsId for application/json ContentType.
type PatchApiV1TenantsIdJSONRequestBody = UpdateTenantRequest

// PostApiV1TopicsJSONRequestBody defines body for PostApiV1Topics for application/json ContentType.
type PostApiV1TopicsJSONRequestBody = CreateTopicRequest

// PatchApiV1TopicsIdJSONRequestBody defines body for PatchApiV1TopicsId for application/json ContentType.
type PatchApiV1TopicsIdJSONRequestBody = UpdateTopicRequest

// PostApiV1TopicsIdSubTopicsJSONRequestBody defines body for PostApiV1TopicsIdSubTopics for application/json ContentType.
type PostApiV1TopicsIdSubTopicsJSONRequestBody = CreateSubTopicRequest

// PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody defines body for PatchApiV1TopicsIdSubTopicsSubId for application/json ContentType.
type PatchApiV1TopicsIdSubTopicsSubIdJSONRequestBody = UpdateSubTopicRequest

// PatchApiV1UsersIdJSONRequestBody defines body for PatchApiV1UsersId for application/json ContentType.
type PatchApiV1UsersIdJSONRequestBody = UpdateUserRequest

// Base64 encoded, gzipped, json marshaled Swagger object
var swaggerSpec = []string{

	"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",
}

// GetSwagger returns the content of the embedded swagger specification file
// or error if failed to decode
func decodeSpec() ([]byte, error) {
	zipped, err := base64.StdEncoding.DecodeString(strings.Join(swaggerSpec, ""))
	if err != nil {
		return nil, fmt.Errorf("error base64 decoding spec: %w", err)
	}
	zr, err := gzip.NewReader(bytes.NewReader(zipped))
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}
	var buf bytes.Buffer
	_, err = buf.ReadFrom(zr)
	if err != nil {
		return nil, fmt.Errorf("error decompressing spec: %w", err)
	}

	return buf.Bytes(), nil
}

var rawSpec = decodeSpecCached()

// a naive cached of a decoded swagger spec
func decodeSpecCached() func() ([]byte, error) {
	data, err := decodeSpec()
	return func() ([]byte, error) {
		return data, err
	}
}

// Constructs a synthetic filesystem for resolving external references when loading openapi specifications.
func PathToRawSpec(pathToFile string) map[string]func() ([]byte, error) {
	res := make(map[string]func() ([]byte, error))
	if len(pathToFile) > 0 {
		res[pathToFile] = rawSpec
	}

	return res
}

// GetSwagger returns the Swagger specification corresponding to the generated code
// in this file. The external references of Swagger specification are resolved.
// The logic of resolving external references is tightly connected to "import-mapping" feature.
// Externally referenced files must be embedded in the corresponding golang packages.
// Urls can be supported but this task was out of the scope.
func GetSwagger() (swagger *openapi3.T, err error) {
	resolvePath := PathToRawSpec("")

	loader := openapi3.NewLoader()
	loader.IsExternalRefsAllowed = true
	loader.ReadFromURIFunc = func(loader *openapi3.Loader, url *url.URL) ([]byte, error) {
		pathToFile := url.String()
		pathToFile = path.Clean(pathToFile)
		getSpec, ok := resolvePath[pathToFile]
		if !ok {
			err1 := fmt.Errorf("path not found: %s", pathToFile)
			return nil, err1
		}
		return getSpec()
	}
	var specData []byte
	specData, err = rawSpec()
	if err != nil {
		return
	}
	swagger, err = loader.LoadFromData(specData)
	if err != nil {
		return
	}
	return
}
